<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Simple PC Builder</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .search-container {
            margin-bottom: 20px;
        }
        body{
            background-color: #dbdbdb;
        }

    </style>
</head>
<body>
<%- include('../templates/navbar'); %>
<div class="container bg-white shadow rounded w-50 mt-4 p-5 pb-4">
    <h1 class="text-center mb-4">PC Builder</h1>

    <div class="search-container">
        <label for="cpu-select" class="form-label">Select CPU:</label>
        <div id="cpu-select-container">
            <select id="cpu-select" class="form-select">
                <option value="">Loading CPUs...</option>
            </select>
        </div>
    </div>

    <div class="search-container">
        <label for="gpu-select" class="form-label">Select GPU:</label>
        <div id="gpu-select-container">
            <select id="gpu-select" class="form-select">
                <option value="">Loading GPUs...</option>
            </select>
        </div>
    </div>

    <div class="search-container">
        <label for="parts-select" class="form-label">Select Other Parts:</label>
        <div id="parts-select-container">
            <select id="parts-select" class="form-select">
                <option value="">Loading Parts...</option>
            </select>
        </div>
    </div>
</div>
<%- include('../templates/footer'); %>
<script>
    document.addEventListener('DOMContentLoaded', async () => {
        const cpuSelect = document.getElementById('cpu-select');
        const gpuSelect = document.getElementById('gpu-select');
        const partsSelect = document.getElementById('parts-select');

        // Fetch data from APIs
        async function fetchData(url) {
            try {
                const response = await fetch(url);
                return response.json();
            } catch (error) {
                console.error('Error fetching data:', error);
                return [];
            }
        }

        // Populate options dynamically
        async function populateSelect(selectElement, data, key) {
            selectElement.innerHTML = '<option value="">Select an option...</option>';
            data.forEach(item => {
                const option = document.createElement('option');
                option.value = item[key];
                option.textContent = item[key];
                selectElement.appendChild(option);
            });
        }

        // Searchable dropdown
        function makeSearchable(containerId, selectId, data, key) {
            const container = document.getElementById(containerId);
            const originalSelect = document.getElementById(selectId);

            originalSelect.addEventListener('click', () => {
                const input = document.createElement('input');
                input.type = 'text';
                input.className = 'form-control';
                input.placeholder = 'Search...';

                const list = document.createElement('div');
                list.className = 'list-group';

                container.innerHTML = '';
                container.appendChild(input);
                container.appendChild(list);

                input.addEventListener('input', () => {
                    const query = input.value.toLowerCase();
                    const filteredData = data.filter(item => item[key].toLowerCase().includes(query));

                    list.innerHTML = '';
                    if (filteredData.length > 0) {
                        filteredData.forEach(item => {
                            const listItem = document.createElement('button');
                            listItem.type = 'button';
                            listItem.className = 'list-group-item list-group-item-action';
                            listItem.textContent = item[key];
                            listItem.addEventListener('click', () => {
                                container.innerHTML = '';
                                originalSelect.innerHTML = '';
                                const selectedOption = document.createElement('option');
                                selectedOption.value = item[key];
                                selectedOption.textContent = item[key];
                                originalSelect.appendChild(selectedOption);
                                originalSelect.value = item[key];
                                container.appendChild(originalSelect);
                            });
                            list.appendChild(listItem);
                        });
                    } else {
                        const noResults = document.createElement('div');
                        noResults.className = 'text-muted text-center py-2';
                        noResults.textContent = 'No results found';
                        list.appendChild(noResults);
                    }
                });
            });
        }

        // Fetch data from APIs
        const cpuData = await fetchData('https://cpu-data.p.rapidapi.com');
        const gpuData = await fetchData('https://raw.githubusercontent.com/voidful/gpu-info-api/gpu-data/gpu.json');
        const partsData = await fetchData('https://comppartsapi.herokuapp.com/computerparts/');

        // Populate initial selects
        populateSelect(cpuSelect, cpuData, 'name');
        populateSelect(gpuSelect, gpuData, 'name');
        populateSelect(partsSelect, partsData, 'name');

        // Make dropdowns searchable
        makeSearchable('cpu-select-container', 'cpu-select', cpuData, 'name');
        makeSearchable('gpu-select-container', 'gpu-select', gpuData, 'name');
        makeSearchable('parts-select-container', 'parts-select', partsData, 'name');
    });
</script>
</body>
</html>
