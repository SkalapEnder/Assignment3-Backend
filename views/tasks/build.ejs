<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>GPU Select</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .search-container {
            margin-bottom: 20px;
        }
        body{
            background-color: #dbdbdb;
        }

    </style>
</head>
<body>
<%- include('../templates/navbar'); %>
<div class="container bg-white shadow rounded mt-4 p-5 pb-4">
    <h1 class="text-center mb-4">GPU select</h1>
    <div class="d-flex justify-content-evenly">
        <!-- GPU part -->
        <div class="w-50 mx-3">
            <div>
                <div class="mb-3">
                    <label for="gpu-input" class="form-label">Enter GPU Name:</label>
                    <input type="text" id="gpu-input" class="form-control" placeholder="Type a GPU name (e.g., RTX 3060)" />
                </div>

                <div id="gpu-options-container" class="mt-3">
                    <label for="gpu-select" class="form-label">Select a GPU:</label>
                    <select id="gpu-select" class="form-select">
                        <option value="">Start typing above to load GPUs...</option>
                    </select>
                </div>
            </div>

            <div id="gpu-details" class="mt-4">
                <h4>GPU Details:</h4>
                <p><strong>Model:</strong> <span id="gpu-model">N/A</span></p>
                <p><strong>Vendor:</strong> <span id="gpu-vendor">N/A</span></p>
                <p><strong>Identifier:</strong> <span id="gpu-identifier">N/A</span></p>
                <p><strong>Memory Size:</strong> <span id="gpu-memory-size">N/A</span></p>
                <p><strong>Memory Type:</strong> <span id="gpu-memory-type">N/A</span></p>
                <p><strong>Bus Interface:</strong> <span id="gpu-bus-interface">N/A</span></p>
                <p><strong>TDP (Watts):</strong> <span id="gpu-tdp">N/A</span></p>
            </div>
        </div>

        <div id="search-amazon" class="row">
            <h3>Search in Amazon</h3>
            <div class="overflow-auto">
                <% if (products.length > 0) { %>
                    <% products.forEach(product => { %>
                        <div class="col-md-4 mb-4">
                            <div class="card">
                                <img src="<%= product.product_photo %>" class="card-img-top" alt="<%= product.product_title %>">
                                <div class="card-body">
                                    <h5 class="card-title"><%= product.product_title %></h5>
                                    <p class="card-text">Price: <%= product.product_price %></p>
                                    <p class="card-text">Rating: <%= product.product_star_rating %> (<%= product.product_num_ratings%>)</p>
                                </div>
                                <div class="card-footer">
                                    <form action="/add-gpu>" method="POST">
                                        <button type="submit" class="btn btn-primary">Add to Favorite</button>
                                    </form>
                                </div>
                            </div>
                        </div>
                    <% }); %>
                <% } else { %>
                    <div class="col-12">
                        <p>No products found.</p>
                    </div>
                <% } %>
            </div>
        </div>
    </div>
</div>

<%- include('../templates/footer'); %>

<script>
    const gpuInput = document.getElementById('gpu-input');
    const gpuSelect = document.getElementById('gpu-select');
    const gpuDetails = {
        model: document.getElementById('gpu-model'),
        vendor: document.getElementById('gpu-vendor'),
        identifier: document.getElementById('gpu-identifier'),
        memorySize: document.getElementById('gpu-memory-size'),
        memoryType: document.getElementById('gpu-memory-type'),
        busInterface: document.getElementById('gpu-bus-interface'),
        tdp: document.getElementById('gpu-tdp'),
    };

    gpuInput.addEventListener('input', async function () {
        const userInput = this.value;

        if (userInput.length > 0) {
            try {
                const response = await fetch(`/api/gpus?search=${encodeURIComponent(userInput)}`);
                if (!response.ok) throw new Error('Failed to fetch GPU data');

                const gpus = await response.json();

                // Clear previous options
                gpuSelect.innerHTML = '<option value="">Select a GPU</option>';

                gpus.forEach(gpu => {
                    const option = document.createElement('option');
                    option.value = gpu.identifier;
                    option.textContent = `${gpu.Model} - ${gpu.identifier} `;
                    option.dataset.details = JSON.stringify(gpu);
                    gpuSelect.appendChild(option);
                });

                if (gpus.length === 0) {
                    gpuSelect.innerHTML = '<option value="">No GPUs found</option>';
                }
            } catch (error) {
                console.error(error);
                gpuSelect.innerHTML = '<option value="">Error fetching GPUs</option>';
            }
        } else {
            gpuSelect.innerHTML = '<option value="">Start typing above to load GPUs...</option>';
        }
    });

    gpuSelect.addEventListener('change', function () {
        const selectedOption = gpuSelect.options[gpuSelect.selectedIndex];
        const gpuDetailsData = selectedOption.dataset.details ? JSON.parse(selectedOption.dataset.details) : null;

        if (gpuDetailsData) {
            console.log(gpuDetailsData);
            gpuDetails.model.textContent = gpuDetailsData.Model || 'N/A';
            gpuDetails.vendor.textContent = gpuDetailsData.Vendor || 'N/A';
            gpuDetails.identifier.textContent = gpuDetailsData.identifier || 'N/A';

            let size = '';
            if (gpuDetailsData['Memory Size (GiB)'] !== undefined) size = gpuDetailsData['Memory Size (GiB)'] + ' Gb';
            else if (gpuDetailsData['Memory Size (GB)'] !== undefined) size = gpuDetailsData['Memory Size (GB)'] + ' Gb';
            else {
                if (gpuDetailsData['Memory Size (MiB)'] !== undefined) size = gpuDetailsData['Memory Size (MiB)'] + ' Mb';
                else if (gpuDetailsData['Memory Size (MB)'] !== undefined) size = gpuDetailsData['Memory Size (MB)'] + ' Mb';
                else size = 'N/A';
            }
            gpuDetails.memorySize.textContent = size;
            gpuDetails.memoryType.textContent = gpuDetailsData['Memory Bus type'] || 'N/A';
            gpuDetails.busInterface.textContent = gpuDetailsData['Bus interface'] || 'N/A';
            gpuDetails.tdp.textContent = gpuDetailsData['TDP (Watts)'] || 'N/A';
        } else {
            Object.values(gpuDetails).forEach(detail => (detail.textContent = 'N/A'));
        }
    });
</script>
</body>
</html>
